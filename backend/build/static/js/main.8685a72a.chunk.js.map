{"version":3,"sources":["components/createAccount.js","services/login.js","components/login.js","components/search.js","components/insertRecipe.js","components/delete.js","components/update.js","components/expansionPanel.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","FormPropsTextFields","classes","registerObject","submitHandler","event","a","preventDefault","console","log","axios","post","status","alert","className","autoComplete","onChange","target","name","value","onSubmit","TextField","required","id","label","Button","style","marginTop","type","variant","color","login","loginObject","loginInfo","useState","username","setUsername","password","setPassword","length","loginServices","searchInfo","returnRecipes","setReturnRecipes","formatRecipe","data","Promise","resolve","reject","arr","recipe","push","steps","i","content","get","search","noValidate","map","rec","insertObject","Steps","step","onClick","document","getElementById","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8685a72a.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function FormPropsTextFields() {\r\n    const classes = useStyles();\r\n\r\n    const registerObject = {};\r\n\r\n    const formHandler = (event) =>{\r\n        registerObject[event.target.name] = event.target.value; \r\n    }\r\n\r\n    const submitHandler = async (event) =>{\r\n      event.preventDefault();\r\n      console.log('event submitted');\r\n\r\n      console.log('final info to submit:', registerObject)\r\n\r\n      try{\r\n\r\n        let data = await axios.post('users/api/register', registerObject)\r\n      //console.log('thisis the data', data.status)\r\n\r\n        if(data.status === 200) {\r\n           alert('Account Created')\r\n         \r\n         }\r\n        }catch(error){\r\n         \r\n           alert('Creation Failed')\r\n          \r\n\r\n        }\r\n    }\r\n  \r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\" onChange={formHandler} onSubmit={submitHandler}>\r\n        <div>\r\n          <TextField required id=\"standard-required\" name=\"username\" label=\"Create Username\" />\r\n          <TextField required id=\"standard-required\" name=\"password\" label=\"Create Password\" />\r\n          <TextField required id=\"standard-required\" name=\"email_address\" label=\"Email Address\" />\r\n         \r\n            <Button style={{ marginTop: \"15px\"}}  type={\"submit\"} variant=\"contained\" color=\"primary\">Create Account</Button>  \r\n          \r\n          </div>\r\n    </form>\r\n  );\r\n}\r\n","import axios from 'axios'\r\n\r\n\r\n\r\nconst login = async (loginObject) => {\r\n  // axios.post('users/api/login', loginObject)\r\n  // .then(response => {\r\n  //  if(response.status === 200) {\r\n  //     alert('User Login Successfull')\r\n  //   } \r\n\r\n  \r\n  // })\r\n  // .catch(error => {\r\n  //   console.log(error)\r\n  //   alert(\"User Login Successful\")\r\n  // })\r\n  \r\n  try{\r\n\r\n    let data = await axios.post('users/api/login', loginObject)\r\n  //console.log('thisis the data', data.status)\r\n\r\n    if(data.status === 200) {\r\n       alert('Login Successful')\r\n     \r\n     }\r\n    }catch(error){\r\n     \r\n       alert('Login Failed')\r\n      \r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default {login}\r\n","import React, {useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport loginServices from '../services/login'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function FormPropsTextFields() {\r\n    const classes = useStyles();\r\n\r\n    const loginInfo = {};\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const formHandler = (event) =>{\r\n        loginInfo[event.target.name] = event.target.value; \r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n      event.preventDefault();\r\n      console.log('event submitted');\r\n\r\n      console.log('final info to submit:', loginInfo)\r\n\r\n    }\r\n\r\n    const handleUsernameChange = (event) => {\r\n      setUsername(event.target.value)\r\n    }\r\n  \r\n    const handlePasswordChange = (event) => {\r\n      setPassword(event.target.value)\r\n    }\r\n\r\n    const submitLoginData = (event) => {\r\n      event.preventDefault()\r\n  \r\n      if(username.length < 1 || password.length < 1) {\r\n        alert('Please enter a username and password')\r\n      } else {\r\n        const loginObject = {\r\n          username: username,\r\n          password: password,\r\n        }\r\n        console.log(loginObject)\r\n        loginServices.login(loginObject)\r\n      }\r\n    }\r\n  \r\n  \r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\"  onChange={formHandler} onSubmit={submitLoginData}>\r\n        <div>\r\n          <TextField required id=\"standard-required\" name=\"username\" label=\"Username\" onChange={handleUsernameChange}/>\r\n          <TextField required id=\"standard-required\" name=\"password\" label=\"Password\" onChange={handlePasswordChange}/>\r\n          <Button style={{ marginTop: \"15px\"}}  type={\"submit\"} variant=\"contained\" color=\"primary\">Login</Button>\r\n          </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function FormPropsTextFields() {\r\n    const classes = useStyles();\r\n\r\n    const searchInfo = {};\r\n\r\n    const [returnRecipes, setReturnRecipes] = useState([])\r\n    \r\n\r\n    const formHandler = (event) =>{\r\n        searchInfo[event.target.name] = event.target.value; \r\n    }\r\n\r\n\r\n    const formatRecipe = (data) => {\r\n\r\n      return new Promise ((resolve, reject) => {\r\n\r\n        let arr = [{recipe: []}];\r\n\r\n        arr[0].recipe.push(data[0])\r\n        arr[0].recipe.push(data[data.length - 1])\r\n\r\n        let steps = []\r\n        for(let i = 1; i < data.length; ++i)\r\n        {\r\n          steps.push(data[i].content)\r\n        }\r\n\r\n        arr[0].recipe.push(steps)\r\n\r\n        console.log(arr)\r\n\r\n        resolve(arr)\r\n\r\n      })\r\n    }\r\n\r\n\r\n    const renderRecipe = () => {\r\n      if(returnRecipes.length < 1){\r\n        return <div></div>\r\n      }else{\r\n\r\n          console.log('returned recipes: ', returnRecipes)\r\n        return returnRecipes.map(rec => \r\n          //const {title, description, ingredients,steps, foodCategory, difficulty} = returnRecipes;\r\n            <div>\r\n               <p>Title: {rec.recipe[0].title}</p>\r\n               <p>Description: {rec.recipe[0].description}</p>\r\n               <p>Ingredients: {rec.recipe[1].ingredient_name}</p>\r\n        <p>Steps: {rec.recipe[2].map(step => <p>{step}</p>)}</p> \r\n               <p>Food Category: {rec.recipe[0].food_category}</p>\r\n               <p>Difficulty: {rec.recipe[0].author_diffculty}</p>\r\n            </div>\r\n\r\n          )\r\n        }\r\n      }\r\n    \r\n\r\n    const submitHandler = async (event) =>{\r\n      event.preventDefault();\r\n   \r\n      console.log('event submitted');\r\n\r\n      console.log('final info to submit:', searchInfo)\r\n\r\n     \r\n     \r\n      try{\r\n      let data = await axios.get(`/recipe/search/${searchInfo.search}`)\r\n        //let data = await axios.post('users/api/login', loginObject)\r\n      //console.log(res)\r\n    \r\n        // if(data.status === 200) {\r\n        //    alert('Login Successful')\r\n         \r\n        //  }\r\n          setReturnRecipes(await formatRecipe(data.data))\r\n        }catch(error){\r\n         \r\n           alert('Recipe Not Found')\r\n          \r\n    \r\n        }\r\n     \r\n       \r\n      \r\n    }\r\n  \r\n    return (\r\n      <form className={classes.root} noValidate autoComplete=\"off\" onChange={formHandler} onSubmit={submitHandler}>\r\n        <div>\r\n        <TextField id=\"standard-search\" label=\"Search Recipe\" name=\"search\" type=\"search\" />\r\n         \r\n            <Button style={{ marginTop: \"15px\"}} type={\"submit\"} variant=\"contained\" color=\"primary\">Search</Button>  \r\n            {renderRecipe()}\r\n          </div>\r\n          \r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function FormPropsTextFields() {\r\n    const classes = useStyles();\r\n\r\n    const insertObject= {Steps: []};\r\n    let step = ''\r\n\r\n    const formHandler = (event) =>{\r\n      //event.preventDefault();\r\n      console.log(event.target.name);\r\n      \r\n\r\n      //console.log('updated insertObject', insertObject)\r\n      \r\n      if(event.target.name === 'Steps')\r\n      {\r\n        console.log('updating step')\r\n        step = event.target.value;\r\n        console.log(step)\r\n      }\r\n      else\r\n      {\r\n        insertObject[event.target.name] = event.target.value;\r\n        \r\n        ///updateinsertObject({ insertObject , event.target.name: event.target.value})\r\n      }\r\n\r\n    }\r\n\r\n    const handleStepUpdate = (event) => {\r\n      event.preventDefault();\r\n      console.log('pushing step')\r\n      // update the value of the text field to nothing, then push the step on steps\r\n      insertObject.Steps.push(step) // push step on setps\r\n      step = '' // clear step\r\n      document.getElementById('standard-required-step').value = '' // clear the textfield labeled Steps\r\n\r\n    }\r\n\r\n    const submitHandler = async (event) =>{\r\n      event.preventDefault();\r\n      console.log('event submitted');\r\n\r\n      console.log('final insertObject to submit:', insertObject)\r\n      \r\n      let data = await axios.post('recipe/insert', insertObject)\r\n      console.log(\"insert data\",data)\r\n    }\r\n\r\n  \r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\" onChange={formHandler} onSubmit={submitHandler}>\r\n        \r\n            <div>\r\n               <TextField required id=\"standard-required\" name=\"Title\" label=\"Title\" /> \r\n            </div>\r\n            <div>\r\n                <TextField required id=\"standard-required\" name=\"Description\" label=\"Description\" />\r\n            </div>\r\n            <div>\r\n                <TextField required id=\"standard-required\" name=\"Ingredients\" label=\"Ingredients\" />\r\n            </div>\r\n            <div>\r\n                <TextField required id=\"standard-required-step\" name=\"Steps\" label=\"Steps\" />\r\n                \r\n            </div>\r\n            <div>\r\n              {/* {insertObject.Steps.map(step => <p>{step}</p>)} */}\r\n              {/* <p>{insertObject.Steps}</p> */}\r\n              {/* <p>test</p> */}\r\n              <Button onClick={handleStepUpdate} style={{ marginTop: \"15px\"}} variant=\"contained\" color=\"primary\">Add Step</Button>  \r\n            </div>\r\n            <div>\r\n                <TextField required id=\"standard-required\" name=\"Food Category\" label=\"Food Category\" />\r\n            </div>\r\n            <div>\r\n                <TextField required id=\"standard-required\" name=\"Difficulty\" label=\"Difficulty\" />\r\n            </div>\r\n            <div>\r\n            <Button type={\"submit\"} style={{ marginTop: \"15px\"}} variant=\"contained\" color=\"primary\">Insert Recipe</Button>  \r\n           \r\n            </div>\r\n          \r\n    </form>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FormPropsTextFields() {\r\n  const classes = useStyles();\r\n\r\n  const searchInfo = {};\r\n\r\n  const [returnRecipes, setReturnRecipes] = useState([])\r\n  \r\n\r\n  const formHandler = (event) =>{\r\n      searchInfo[event.target.name] = event.target.value; \r\n  }\r\n\r\n\r\n  const formatRecipe = (data) => {\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n      let arr = [{recipe: []}];\r\n\r\n      arr[0].recipe.push(data[0])\r\n      arr[0].recipe.push(data[data.length - 1])\r\n\r\n      let steps = []\r\n      for(let i = 1; i < data.length; ++i)\r\n      {\r\n        steps.push(data[i].content)\r\n      }\r\n\r\n      arr[0].recipe.push(steps)\r\n\r\n      console.log(arr)\r\n\r\n      resolve(arr)\r\n\r\n    })\r\n  }\r\n\r\n  const deleteHandler = async (returnRecipes) => {\r\n    try{\r\n      let data = await axios.post('recipe/delete', returnRecipes.recipe[0].uuid)\r\n    \r\n       \r\n        console.log(data)\r\n          \r\n        }catch(error){\r\n         \r\n           alert('Unable to delete')\r\n          \r\n    \r\n        }\r\n  }\r\n\r\n\r\n  const renderRecipe = () => {\r\n    if(returnRecipes.length < 1){\r\n      return <div></div>\r\n    }else{\r\n\r\n        console.log('returned recipes: ', returnRecipes)\r\n      return returnRecipes.map(rec => \r\n\r\n        \r\n        \r\n        //const {title, description, ingredients,steps, foodCategory, difficulty} = returnRecipes;\r\n          <div>\r\n             <p>Title: {rec.recipe[0].title}</p>\r\n             <p>Description: {rec.recipe[0].description}</p>\r\n             {/* \r\n             <p>Ingredients: {rec.recipe[1].ingredient_name}</p>\r\n      <p>Steps: {rec.recipe[2].map(step => <p>{step}</p>)}</p> \r\n             <p>Food Category: {rec.recipe[0].food_category}</p>\r\n             <p>Difficulty: {rec.recipe[0].author_diffculty}</p> */}\r\n             <form onSubmit={deleteHandler}>\r\n             <Button style={{ marginTop: \"15px\"}} type={\"submit\"} variant=\"contained\" color=\"primary\">Delete</Button>  \r\n             </form>\r\n          </div>\r\n\r\n        )\r\n      }\r\n    }\r\n  \r\n\r\n  const submitHandler = async (event) =>{\r\n    event.preventDefault();\r\n \r\n    console.log('event submitted');\r\n\r\n    console.log('final info to submit:', searchInfo)\r\n\r\n    try{\r\n      let data = await axios.get(`/recipe/search/${searchInfo.search}`)\r\n       \r\n        \r\n          setReturnRecipes(await formatRecipe(data.data))\r\n        }catch(error){\r\n         \r\n           alert('Recipe Not Found')\r\n          \r\n    \r\n        }\r\n    \r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\" onChange={formHandler} onSubmit={submitHandler}>\r\n      <div>\r\n      <TextField id=\"standard-search\" label=\"Search Recipe\" name=\"search\" type=\"search\" />\r\n       \r\n          <Button style={{ marginTop: \"15px\"}} type={\"submit\"} variant=\"contained\" color=\"primary\">Search</Button>  \r\n          {renderRecipe()}\r\n        </div>\r\n        \r\n  </form>\r\n);\r\n\r\n// export default function FormPropsTextFields() {\r\n//     const classes = useStyles();\r\n\r\n//     const deleteInfo = {};\r\n\r\n//     const formHandler = (event) =>{\r\n//       deleteInfo[event.target.name] = event.target.value; \r\n//     }\r\n\r\n//     const submitHandler = (event) =>{\r\n//       event.preventDefault();\r\n//       console.log('event submitted');\r\n\r\n//       console.log('final info to submit:', deleteInfo)\r\n\r\n//     }\r\n  \r\n//     return (\r\n//       <form className={classes.root} noValidate autoComplete=\"off\" onChange={formHandler} onSubmit={submitHandler}>\r\n//         <div>\r\n//         <TextField id=\"standard-search\" label=\"Search Recipe to Delete\" name=\"delete\" type=\"search\" />\r\n         \r\n//             <Button style={{ marginTop: \"15px\"}} type={\"submit\"} variant=\"contained\" color=\"primary\">Search</Button>  \r\n          \r\n//           </div>\r\n//     </form>\r\n//   );\r\n}\r\n","import React, {useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function FormPropsTextFields() {\r\n  const classes = useStyles();\r\n\r\n  const searchInfo = {};\r\n\r\n  const [returnRecipes, setReturnRecipes] = useState([])\r\n  \r\n\r\n  const formHandler = (event) =>{\r\n      searchInfo[event.target.name] = event.target.value; \r\n  }\r\n\r\n\r\n  const formatRecipe = (data) => {\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n      let arr = [{recipe: []}];\r\n\r\n      arr[0].recipe.push(data[0])\r\n      arr[0].recipe.push(data[data.length - 1])\r\n\r\n      let steps = []\r\n      for(let i = 1; i < data.length; ++i)\r\n      {\r\n        steps.push(data[i].content)\r\n      }\r\n\r\n      arr[0].recipe.push(steps)\r\n\r\n      console.log(arr)\r\n\r\n      resolve(arr)\r\n\r\n    })\r\n  }\r\n\r\n  const updateHandler = () => {\r\n    alert('Updated')\r\n  }\r\n\r\n\r\n  const renderRecipe = () => {\r\n    if(returnRecipes.length < 1){\r\n      return <div></div>\r\n    }else{\r\n\r\n        console.log('returned recipes: ', returnRecipes)\r\n      return returnRecipes.map(rec => \r\n        //const {title, description, ingredients,steps, foodCategory, difficulty} = returnRecipes;\r\n          <div>\r\n             <p>Title: {rec.recipe[0].title}</p>\r\n             <p>Description: {rec.recipe[0].description}</p>\r\n             {/* \r\n             <p>Ingredients: {rec.recipe[1].ingredient_name}</p>\r\n      <p>Steps: {rec.recipe[2].map(step => <p>{step}</p>)}</p> \r\n             <p>Food Category: {rec.recipe[0].food_category}</p>\r\n             <p>Difficulty: {rec.recipe[0].author_diffculty}</p> */}\r\n             <form onSubmit={updateHandler}>\r\n             <Button style={{ marginTop: \"15px\"}} type={\"submit\"} variant=\"contained\" color=\"primary\">Update</Button>  \r\n             </form>\r\n          </div>\r\n\r\n        )\r\n      }\r\n    }\r\n  \r\n\r\n  const submitHandler = async (event) =>{\r\n    event.preventDefault();\r\n \r\n    console.log('event submitted');\r\n\r\n    console.log('final info to submit:', searchInfo)\r\n\r\n    try{\r\n      let data = await axios.get(`/recipe/search/${searchInfo.search}`)\r\n      \r\n          setReturnRecipes(await formatRecipe(data.data))\r\n        }catch(error){\r\n         \r\n           alert('Recipe Not Found')\r\n          \r\n    \r\n        }\r\n     \r\n    \r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\" onChange={formHandler} onSubmit={submitHandler}>\r\n      <div>\r\n      <TextField id=\"standard-search\" label=\"Search Recipe\" name=\"search\" type=\"search\" />\r\n       \r\n          <Button style={{ marginTop: \"15px\"}} type={\"submit\"} variant=\"contained\" color=\"primary\">Search</Button>  \r\n          {renderRecipe()}\r\n        </div>\r\n        \r\n  </form>\r\n);\r\n\r\n// export default function FormPropsTextFields() {\r\n//     const classes = useStyles();\r\n\r\n//     const updateInfo = {};\r\n\r\n//     const formHandler = (event) =>{\r\n//       updateInfo[event.target.name] = event.target.value; \r\n//     }\r\n\r\n//     const submitHandler = (event) =>{\r\n//       event.preventDefault();\r\n//       console.log('event submitted');\r\n\r\n//       console.log('final info to submit:', updateInfo)\r\n\r\n//     }\r\n  \r\n//     return (\r\n//       <form className={classes.root} noValidate autoComplete=\"off\" onChange={formHandler} onSubmit={submitHandler}>\r\n//         <div>\r\n//         <TextField id=\"standard-search\" label=\"Search Recipe to Update\" name=\"update\" type=\"search\" />\r\n         \r\n//             <Button style={{ marginTop: \"15px\"}} type={\"submit\"} variant=\"contained\" color=\"primary\">Search</Button>  \r\n          \r\n//           </div>\r\n//     </form>\r\n//   );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CreateAccount from './createAccount.js'\r\nimport Login from './login.js'\r\nimport Search from './search.js'\r\nimport InsertRecipe from './insertRecipe.js'\r\nimport Delete from './delete.js'\r\nimport Update from './update.js'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport default function SimpleExpansionPanel() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Create Account</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n           <CreateAccount></CreateAccount>\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\"\r\n                >\r\n                <Typography className={classes.heading}>Login</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                <Typography>\r\n                   <Login></Login>\r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\"\r\n                >\r\n                <Typography className={classes.heading}>Search Recipe</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                <Typography>\r\n                    <Search></Search>\r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\"\r\n                >\r\n                <Typography className={classes.heading}>Insert Recipe</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                <Typography>\r\n                    <InsertRecipe></InsertRecipe>\r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\"\r\n                >\r\n                <Typography className={classes.heading}>Update Recipe</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                <Typography>\r\n                    <Update></Update>\r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\"\r\n                >\r\n                <Typography className={classes.heading}>Delete Recipe</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                <Typography>\r\n                    <Delete></Delete>\r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ExpansionPanel from './components/expansionPanel.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <h1>COOKIT\n    </h1>\n      <ExpansionPanel></ExpansionPanel>\n    </div>\n     \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}